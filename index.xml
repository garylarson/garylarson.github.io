<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gary Larson</title>
    <link>/</link>
    <description>Recent content on Gary Larson</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; Copyright 2018 Gary Larson</copyright>
    <lastBuildDate>Fri, 10 Aug 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>(pinned) About this site</title>
      <link>/blogs_blog/welcome-post/</link>
      <pubDate>Fri, 27 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/blogs_blog/welcome-post/</guid>
      <description>This site is a blog for my personal work on statistics topics and related computing issues.</description>
    </item>
    
    <item>
      <title>test-SHL-Rmarkdown</title>
      <link>/blogs_blog/test-shl-rmarkdown/</link>
      <pubDate>Tue, 14 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/blogs_blog/test-shl-rmarkdown/</guid>
      <description>Here&amp;rsquo;s an .Rmd file.
1 2  a = 5 plot(rnorm(10),rnorm(10))   How about a function definition?
1 2 3  myfn &amp;lt;- function(a,b,c){ return (a*b*c) }  </description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>/blogs_blog/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>/blogs_blog/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>/blogs_blog/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>/blogs_blog/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
1 2 3  ▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png   should become
1 2 3 4  ▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png   Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>test-today</title>
      <link>/blogs_blog/test-today/</link>
      <pubDate>Fri, 10 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/blogs_blog/test-today/</guid>
      <description>Here’s an .Rmd file.
a = 5 plot(rnorm(10),rnorm(10)) How about a function definition?
myfn &amp;lt;- function(a,b,c){ return (a*b*c) } </description>
    </item>
    
    <item>
      <title>test-today</title>
      <link>/blogs_blog/test-today/</link>
      <pubDate>Fri, 10 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/blogs_blog/test-today/</guid>
      <description>Here&amp;rsquo;s an .Rmd file.
1 2  a = 5 plot(rnorm(10),rnorm(10))   How about a function definition?
1 2 3  myfn &amp;lt;- function(a,b,c){ return (a*b*c) }  </description>
    </item>
    
    <item>
      <title>generalPostTest</title>
      <link>/blogs_blog/test2/</link>
      <pubDate>Wed, 01 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/blogs_blog/test2/</guid>
      <description>Here&amp;rsquo;s a test in General!</description>
    </item>
    
    <item>
      <title>test2</title>
      <link>/blogs_research-blog/test2/</link>
      <pubDate>Wed, 01 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/blogs_research-blog/test2/</guid>
      <description>Here&amp;rsquo;s another entry!</description>
    </item>
    
    <item>
      <title>test</title>
      <link>/blogs_research-blog/test/</link>
      <pubDate>Fri, 27 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/blogs_research-blog/test/</guid>
      <description>Here&amp;rsquo;s something!</description>
    </item>
    
    <item>
      <title>2018-01-22-test-new-post</title>
      <link>/blogs_blog/2018-01-22-test-new-post/</link>
      <pubDate>Mon, 22 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/blogs_blog/2018-01-22-test-new-post/</guid>
      <description>Embedding tweets Testing embedding a tweet. Anyone know of an R package for interfacing with Alexa Skills? @thosjleeper @xieyihui @drob @JennyBryan @HoloMarkeD ?
&amp;mdash; Jeff Leek (@jtleek) April 12, 2017   </description>
    </item>
    
    <item>
      <title>Test new post via add-in menu</title>
      <link>/blogs_blog/test-new-post-via-add-in-menu/</link>
      <pubDate>Mon, 22 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/blogs_blog/test-new-post-via-add-in-menu/</guid>
      <description>To write a new post (like this one) using blogdown in RStudio, just click “Addins” -&amp;gt; “New Post” near the top of the RStudio window.
Here’s some junk R code. In the chunk options, just set eval=FALSE.
plot(x) I should get used to writing (R) markdown pretty quickly, after translating a few of my plot posts.
Just for fun, here’s a plot.
plot(x &amp;lt;- seq(-10,10,length.out=100), sin(x), type=&amp;#39;l&amp;#39;, xlab=&amp;#39;x&amp;#39;, ylab=&amp;#39;sin(x)&amp;#39;) And here’s a picture, to test: Maybe I can do it in a different size (200px):</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>/blogs_blog/2015-07-23-r-rmarkdown/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      
      <guid>/blogs_blog/2015-07-23-r-rmarkdown/</guid>
      <description>R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
You can embed an R code chunk like this:
summary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>/blogs_blog/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/blogs_blog/goisforlovers/</guid>
      <description>Hugo uses the excellent [go][] [html/template][gohtmltemplate] library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>/blogs_blog/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/blogs_blog/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
  </channel>
</rss>